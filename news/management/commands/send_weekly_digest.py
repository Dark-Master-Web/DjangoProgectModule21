from django.core.management.base import BaseCommand
from news.services.email_service import EmailService
import logging

logger = logging.getLogger('news.management')


class Command(BaseCommand):
    help = '–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –¥–∞–π–¥–∂–µ—Å—Ç—ã –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º'

    def add_arguments(self, parser):
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–µ–∑ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏',
        )

    def handle(self, *args, **options):
        dry_run = options['dry_run']

        self.stdout.write("üìä –ó–∞–ø—É—Å–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤...")

        if dry_run:
            self.stdout.write(
                self.style.WARNING("üî∂ –†–ï–ñ–ò–ú –ü–†–û–°–ú–û–¢–†–ê: –ø–∏—Å—å–º–∞ –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
            )
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            return

        try:
            result = EmailService.send_weekly_digest()

            self.stdout.write(
                self.style.SUCCESS(
                    f"‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –¥–∞–π–¥–∂–µ—Å—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã! "
                    f"–£—Å–ø–µ—à–Ω–æ: {result['sent']}, –û—à–∏–±–æ–∫: {result['errors']}"
                )
            )

            logger.info(f"–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –¥–∞–π–¥–∂–µ—Å—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã: {result}")

        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤: {e}")
            )
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤: {e}")